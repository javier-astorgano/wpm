@using System.ComponentModel.DataAnnotations

@page "/pets/create"
@inject WpmDbContext DbContext
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Create</h3>

<EditForm Model="Model" OnValidSubmit="Submit" FormName="PetForm">
	<div class="from-group mb-5">
		<label class="form-label" for="species">Especie</label>
		<InputSelect id="species" class="form-select" @bind-Value="SpeciesId" @bind-Value:after="OnValueChanged">
			@foreach (var specie in DbContext.Species)
			{
				<option value="@specie.Id">@specie.Name</option>
			}

		</InputSelect>

		<label class="form-label" for="breed">Raza</label>
		<InputSelect id="breed" class="form-select" @bind-Value="Model.BreedId">
			@foreach (var breed in breeds)
			{
				<option value="@breed.Id">@breed.Name</option>
			}

		</InputSelect>

		<label class="form-label" for="name">Nombre</label>
		<InputText id="name" DisplayName="Nombre" @bind-Value="Model.Name" class="form-control" />

		<label class="form-label" for="age">Edad</label>
		<InputNumber id="age" DisplayName="Edad" @bind-Value="Model.Age" @bind-Value:format="N0" class="form-control" />

		<label class="form-label" for="weight">Peso</label>
		<InputNumber id="weight" DisplayName="Peso" @bind-Value="Model.Weight" @bind-Value:format="N1" class="form-control" />


	</div>


	<DataAnnotationsValidator>

	</DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>
	<div>
		<button class="btn btn-primary" type="submit">Guardar</button>
	</div>

</EditForm>

@code {
	int SpeciesId=1;

	List<Breed> breeds;
	private async Task OnValueChanged()
	{
		breeds = await DbContext.Breeds.Where(b => b.SpeciesId == SpeciesId).ToListAsync();
	}


	[SupplyParameterFromForm]
	public PetViewModel Model { get; set; }

	[Parameter]
	public int Id { get; set; }

	private string Name { get; set; }

	protected override async Task OnInitializedAsync()
	{


		Model ??= new();
		breeds = await DbContext.Breeds.Where(b => b.SpeciesId == SpeciesId).ToListAsync();

	}
	async Task Submit()
	{
		var pet = new Pet()
			{
				Name = Model.Name,
				Age = Model.Age,
				Weight = Model.Weight,
				BreedId = Model.BreedId
			};
			DbContext.Pets.Add(pet);
		await DbContext.SaveChangesAsync();

		NavigationManager.NavigateTo($"/pets");

	}

	public class PetViewModel
	{
		[Required]
		[StringLength(50, ErrorMessage = "El nombre es demasiado largo")]
		public string Name { get; set; }

		[Range(0, 30)]
		public int? Age { get; set; }

		[Range(0.1d, 100d)]
		public decimal? Weight { get; set; }

		[Required]
		public int BreedId { get; set; }

		[Required]
		public int SpeciesId{ get; set; }


	}
}
